public class Solution4 {

    static int a, b;
    static long answer = 0;
    static Map<Long, Long> map;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        a = Integer.parseInt(st.nextToken());
        b = Integer.parseInt(st.nextToken());
        map = new HashMap<>();
        for (int i = a; i <= b; i++) {
            long a = cycle(i ) - 1;
            answer = answer < a ? a : answer;
        }
        Set<Long> keySet = map.keySet();
        for (Long key : keySet) {
            System.out.println(key + " : " + map.get(key));
        }
        System.out.println(answer);
    }

    static long cycle(long cur) {
        if (cur == 1) {
            return 2;
        }
        if (map.containsKey(cur) == true) {
            return map.get(cur) + 1;
        }
        if (cur % 2 == 0) {
            map.put(cur, cycle(cur / 2));
            return map.get(cur) + 1;
        } else {
            map.put(cur, cycle(cur * 3 + 1));
            return map.get(cur) + 1;
        }
    }
}
